name: CI

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request: {}

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    env:
      POETRY_VERSION: 1.1.7

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.9

    - name: set up poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ env.POETRY_VERSION }}
 
    - run: make install

    - run: make lint

    # - run: make mypy

  test:
    name: test py${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: ['3.6', '3.7', '3.8', '3.9']

    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      POETRY_VERSION: 1.1.7

    runs-on: ${{ format('{0}-latest', matrix.os) }}

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: set up poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ env.POETRY_VERSION }}

    - run: make install

    - run: make test

    # - run: coverage xml

    # - uses: codecov/codecov-action@v1.4.1
    #   with:
    #     file: ./coverage.xml
    #     env_vars: PYTHON,OS

  deploy:
    name: Deploy
    needs: [lint, test]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    env:
      POETRY_VERSION: 1.1.7

    steps:
      - uses: actions/checkout@v2

      - name: set up python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.8'

      - name: set up poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: install
        run: make install

      - name: build
        run: python setup.py sdist bdist_wheel

      - run: twine check dist/*

      - name: check tag
        run: PACKAGE=arq python <(curl -Ls https://git.io/JvQsH)

      - name: upload to pypi
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_token }}

      - name: publish docs
        run: make publish-docs
        env:
          NETLIFY: ${{ secrets.netlify_token }}
